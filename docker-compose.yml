---
version: "3"

networks:
  default:
    ipam:
      config:
        - subnet: 192.168.0.0/16

services:

  appdaemon:
    build:
      context: ./appdaemon/docker
      args:
        VERSION: 3.0.2
    container_name: appdaemon
    depends_on:
      - hass
    environment:
      EXTRA_CMD: -D INFO
    image: bachya/appdaemon
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - appdaemon-config:/conf
      - shared:/shared

  amazon-dash:
    command: amazon-dash run --config /config/amazon-dash.yml
    container_name: amazon-dash
    depends_on:
      - hass
    image: nekmo/amazon-dash:latest
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - amazon-dash-config:/config:ro

  glances:
    build:
      context: ./glances/docker
      args:
        version: 3.0
    command: /usr/bin/supervisord -c /etc/supervisor.conf
    container_name: glances
    image: bachya/glances
    ports:
      - "61208:61208/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - glances-config:/etc/glances:ro

  grafana:
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      GF_SECURITY_ADMIN_PASSWORD: password
      GF_SECURITY_ADMIN_USER: admin
      GF_SERVER_DOMAIN: 129i98121212.myserver.com
    image: grafana/grafana:5.3.4
    ports:
      - "3000:3000/tcp"
    restart: unless-stopped
    user: "104"
    volumes:
      - grafana-config:/var/lib/grafana

  hass:
    build:
      context: ./home-assistant/docker
      args:
        ps4waker_version: 1.6.0
        hass_version: 0.83.2
    container_name: hass
    depends_on:
      - glances
      - influxdb
      - mosquitto
      - mysql
    devices:
      - "/dev/zwave:/dev/zwave"
    image: bachya/home-assistant
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - hass-config:/config
      - shared:/shared

  influxdb:
    container_name: influxdb
    image: influxdb:1.7.1-alpine
    environment:
      INFLUXDB_DB: hassdb
      INFLUXDB_USER: user
      INFLUXDB_USER_PASSWORD: password
    ports:
      - "8086:8086/tcp"
    restart: unless-stopped
    volumes:
      - influxdb-config:/var/lib/influxdb

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:1.5.4
    ports:
      - "1883:1883/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro
      - /usr/share/ca-certificates:/usr/share/ca-certificates:ro
      - mosquitto-config:/mosquitto/config
      - mosquitto-data:/mosquitto/data

  mysql:
    container_name: mysql
    environment:
      MYSQL_DATABASE: recorder_db
      MYSQL_PASSWORD: recorder_password
      MYSQL_ROOT_PASSWORD: mysql_root_password
      MYSQL_USER: recorder_user
    image: bianjp/mariadb-alpine:latest
    ports:
      - "3306:3306/tcp"
    restart: unless-stopped
    volumes:
      - /var/lib/docker/mysql:/var/lib/mysql

  nginx:
    build:
      context: ./nginx/docker
      args:
        geoip_version: 1.6.12
        nginx_version: 1.15.6
    cap_add:
      - NET_ADMIN
    command: /usr/bin/supervisord -c /etc/supervisor.conf
    container_name: nginx
    depends_on:
      - appdaemon
      - grafana
      - hass
    image: bachya/nginx
    networks:
      default:
        ipv4_address: 192.168.7.7
    ports:
      - "443:443/tcp"
    restart: unless-stopped
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/ssl:/etc/ssl:ro
      - fail2ban-config:/etc/fail2ban
      - nginx-config:/etc/nginx

  portainer:
    container_name: portainer
    image: portainer/portainer:1.19.2
    ports:
      - "9000:9000/tcp"
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-config:/data

  tasmoadmin:
    container_name: tasmoadmin
    image: raymondmm/tasmoadmin:v1.6.0
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - tasmoadmin-config:/data

volumes:

  amazon-dash-config:
  appdaemon-config:
  fail2ban-config:
  glances-config:
  grafana-config:
  hass-config:
  influxdb-config:
  mosquitto-config:
  mosquitto-data:
  nginx-config:
  portainer-config:
  shared:
  tasmoadmin-config:
